<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<s:http auto-config="true" use-expressions="true">
		<!-- url별 접근권한 설정 -->
		<!-- 해당 url만 권한을 준다 -->
		<s:intercept-url pattern="/resources/**" access="permitAll"/>
		<s:intercept-url pattern="/" access="permitAll"/>
		<!-- spring security를 만들어주는 url -->
		<s:intercept-url pattern="/memberlogin" access="permitAll"/>
		<s:intercept-url pattern="/member/login" access="permitAll"/>
		<s:intercept-url pattern="/member/regist" access="permitAll"/>
		<!-- hasRole 특정권한을 가진사람만 접근 가능 -->
		<s:intercept-url pattern="/member" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<!-- member 이하의 모든 url -->
		<s:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		<s:intercept-url pattern="/board/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		
		<!-- csrf 비활성화 -->
		<!-- csrf는 check하지 않겠다 -->
		<s:csrf disabled="true"/>
		
		<s:form-login 
			login-page="/"
			username-parameter="id"
			password-parameter="password"
			login-processing-url="/memberlogin"
			default-target-url="/member/login"
			authentication-failure-url="/"
			always-use-default-target="true"
		/>
		
		<s:logout
			logout-url="/memberlogout"
			logout-success-url="/"
			invalidate-session="true"
		/>
		
		<s:session-management invalid-session-url="/">
			<s:concurrency-control
				max-sessions="1"
				expired-url="/"
			/>
			
		</s:session-management>
			
	</s:http>
	
	<!-- Spring Security가 처리할 인증 객체 생성 -->
	<bean id="userService"
		  class="kr.co.hucloud.security.UserService">
	    <property name="memberService" ref="memberService"/>
	</bean>
	
	<!-- UserService 객체를 Spring Security authenticationManager에 등록 -->
	<s:authentication-manager>
		<s:authentication-provider ref="userService"/>
	</s:authentication-manager>

</beans>
