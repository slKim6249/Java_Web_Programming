/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2018-09-11 10:29:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginTop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-4.0.0.RELEASE.jar", Long.valueOf(1536649226039L));
    _jspx_dependants.put("jar:file:/C:/Source/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HuCloud/WEB-INF/lib/spring-security-taglibs-4.0.0.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1427282480000L));
    _jspx_dependants.put("jar:file:/C:/Source/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HuCloud/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1455595374000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"div.login\").hide();\r\n");
      out.write("\t\r\n");
      out.write("\tvar isShow = false;\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"span.login\").click(function() {\r\n");
      out.write("\t\tif(isShow) {\r\n");
      out.write("\t\t\t$(\"div.login\").slideUp(\"fast\");\r\n");
      out.write("\t\t\tisShow = false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\t$(\"div.login\").slideDown(\"fast\");\r\n");
      out.write("\t\t\t$(\"#id\").focus();\r\n");
      out.write("\t\t\tisShow = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfullBlock().hide();\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".login .logout\").click(function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfullBlock().show();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(confirm(\"로그아웃 하시겠습니까?\")) {\r\n");
      out.write("\t\t\t// member/logout -> memberlogout\r\n");
      out.write("\t\t\tlocation.href=\"/HuCloud/memberlogout\"\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\tfullBlock().hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".login .dropTable\").click(function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfullBlock().show();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(confirm(\"모든 테이블을 삭제합니다. 계속 진행하겠습니까?\")) {\r\n");
      out.write("\t\t\t$.post(\"/HuCloud/table/deleteAllTable\", {}, function(data) {\r\n");
      out.write("\t\t\t\tif(data == \"OK\") {\r\n");
      out.write("\t\t\t\t\talert(\"모든 테이블을 삭제했습니다. 이 창을 닫습니다.\");\r\n");
      out.write("\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(data != \"OK\") {\r\n");
      out.write("\t\t\t\t\talert(\"테이블 삭제에 실패했습니다. 강사에게 문의하세요.\");\r\n");
      out.write("\t\t\t\t\tfullBlock().hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\tfullBlock().hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function fullBlock() {\r\n");
      out.write("\tvar width = $(window).width();\r\n");
      out.write("\tvar height = $(window).height();\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".blockDiv\").css({\r\n");
      out.write("\t\t\"width\" : width + \"px\",\r\n");
      out.write("\t\t\"height\": height + \"px\",\r\n");
      out.write("\t\t\"opacity\" : \"0.5\"\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\treturn $(\".blockDiv\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"blockDiv\"></div>\r\n");
      out.write("<div class=\"login\">\r\n");
      out.write("\t<div class=\"wrapper\" style=\"margin-top: 6px;\">\r\n");
      out.write("\t\t<span class=\"button loginButton logout\">Logout</span>\r\n");
      out.write("\t\t");
      if (_jspx_meth_s_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("\t<div style=\"vertical-align: top;\">\r\n");
      out.write("\t\t<img src=\"/HuCloud/resources/img/hucloud-logo_60.png\" style=\"float:left;\" />\r\n");
      out.write("\t\t<img src=\"/HuCloud/resources/img/security.PNG\" width=\"130\" style=\"float:left;padding-top:5px;\"/>\r\n");
      out.write("\t\t<span class=\"login link\" style=\"float:right;padding-top: 5px; padding-right: 5px;\">(<b>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope._MEMBER_.userName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</b>) Logout</span>\r\n");
      out.write("\t\t<div style=\"clear:both;\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"spacer\"></div>\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"tooltip\"></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_s_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  s:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_s_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    _jspx_th_s_005fauthorize_005f0.setPageContext(_jspx_page_context);
    _jspx_th_s_005fauthorize_005f0.setParent(null);
    // /WEB-INF/view/common/loginTop.jsp(81,2) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_s_005fauthorize_005f0.setAccess("hasRole('ROLE_ADMIN')");
    int _jspx_eval_s_005fauthorize_005f0 = _jspx_th_s_005fauthorize_005f0.doStartTag();
    if (_jspx_eval_s_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      out.write("\r\n");
      out.write("\t\t\t<span class=\"button registButton dropTable\">Drop All Tables</span>\r\n");
      out.write("\t\t");
    }
    if (_jspx_th_s_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.reuse(_jspx_th_s_005fauthorize_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.reuse(_jspx_th_s_005fauthorize_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fimport_005f0.setParent(null);
    // /WEB-INF/view/common/loginTop.jsp(94,1) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fimport_005f0.setUrl("/common/menu");
    int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
      if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fimport_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
    }
    return false;
  }
}
